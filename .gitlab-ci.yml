image: registry.gitlab.com/luwjistik1/gitlabci:v2.1

services:
  - docker:20.10-dind

default:
  tags:
    - kube

stages:
  - build
  - deploy

include:
  - project: luwjistik1/gitlabci
    ref: main
    file: build.yml
  - project: luwjistik1/gitlabci
    ref: main
    file: deploy.yml

build-development:
  stage: build
  extends: .build_template
  variables:
    DOCKERFILE: "${CI_PROJECT_DIR}/Dockerfile"
  before_script:
    - VERSION="${CI_COMMIT_SHA}"
    - IMAGE_DESTINATION="${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
    - echo SENTRY_DSN="https://aaab7374bcc146b68c3847fc5dd36b77@o1141218.ingest.sentry.io/6208578" >> .env
  only:
    refs:
      - main
  except:
    refs:
      - tags

deploy_staging:
  stage: deploy
  before_script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - aws eks update-kubeconfig --name brain-staging-cluster
  script:
    - kubectl -n app set image deployment/client-portal client-portal=registry.gitlab.com/luwjistik1/client-portal:${CI_COMMIT_SHA}
    - envsubst < ./.kubernetes/staging/configmap.yaml | kubectl -n app apply -f -
    - envsubst < ./.kubernetes/staging/deployment.yaml | kubectl -n app apply -f -
    - envsubst < ./.kubernetes/staging/ingress.yaml | kubectl -n app apply -f -
    - envsubst < ./.kubernetes/staging/service.yaml | kubectl -n app apply -f -
  only:
    refs:
      - main

build-sandbox:
  extends: .build_template
  stage: build
  variables:
    DOCKERFILE: "${CI_PROJECT_DIR}/Dockerfile"
  before_script:
    - VERSION=$(printf "${CI_COMMIT_TAG}" | sed 's/sandbox\//sandbox-/' )
    - IMAGE_DESTINATION="${CI_REGISTRY_IMAGE}:${VERSION}"
    - echo SENTRY_DSN="https://aaab7374bcc146b68c3847fc5dd36b77@o1141218.ingest.sentry.io/6208578" >> .env
  only:
    - /^sandbox\/.*$/

deploy-sandbox:
  stage: deploy
  extends: .deploy_ecs_template
  before_script:
    - VERSION=$(printf "${CI_COMMIT_TAG}" | sed 's/sandbox\//sandbox-/' )
    - IMAGE_DESTINATION="${CI_REGISTRY_IMAGE}:${VERSION}"
  variables:
    OUTPUTDIR: output.json
    CLUSTER: sandbox-lj-ecs-cluster
    SERVICE: sandbox-lj-client-service
    NAME: lj-sandbox-client-taskdef
  only:
    - /^sandbox\/.*$/


build-prod:
  extends: .build_template
  stage: build
  variables:
    DOCKERFILE: "${CI_PROJECT_DIR}/Dockerfile"
  before_script:
    - VERSION=$(printf "${CI_COMMIT_TAG}" | sed 's/prod\//prod-/' )
    - IMAGE_DESTINATION="${CI_REGISTRY_IMAGE}:${VERSION}"
    - echo SENTRY_DSN="https://aaab7374bcc146b68c3847fc5dd36b77@o1141218.ingest.sentry.io/6208578" >> .env
  only:
    - /^prod\/.*$/

deploy-prod:
  stage: deploy
  extends: .deploy_ecs_template
  before_script:
    - VERSION=$(printf "${CI_COMMIT_TAG}" | sed 's/prod\//prod-/' )
    - IMAGE_DESTINATION="${CI_REGISTRY_IMAGE}:${VERSION}"
  variables:
    OUTPUTDIR: output.json
    CLUSTER: prod-lj-ecs-cluster
    SERVICE: prod-lj-client-service
    NAME: lj-prod-client-taskdef
  only:
    - /^prod\/.*$/
